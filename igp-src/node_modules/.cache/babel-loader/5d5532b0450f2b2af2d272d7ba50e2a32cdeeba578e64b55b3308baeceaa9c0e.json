{"ast":null,"code":"// üöÄ Servi√ßo de Integra√ß√£o com Planilha - VERS√ÉO OTIMIZADA\n// Motor de c√°lculo ultra-r√°pido com cache inteligente e √≠ndices\nimport*as XLSX from'xlsx';// Sistema de logs otimizado\nexport const SPREADSHEET_LOGS={logs:[],addLog:function(type,message){let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;const log={timestamp:new Date().toISOString(),type:type,message:message,data:data};this.logs.push(log);// Manter apenas os √∫ltimos 50 logs\nif(this.logs.length>50){this.logs=this.logs.slice(-50);}},getLogs:function(){return this.logs;},clearLogs:function(){this.logs=[];}};// Cache otimizado com √≠ndices\nlet spreadsheetData=null;let lastModified=null;// √çndices para busca ultra-r√°pida\nlet agentIndex=new Map();// agentName -> [rowIds]\nlet dateIndex=new Map();// dateString -> [rowIds]\nlet statusIndex=new Map();// status -> [rowIds]\nlet filaIndex=new Map();// fila -> [rowIds]\n// Cache de m√©tricas calculadas\nlet metricsCache=new Map();// cacheKey -> metrics\nlet cacheExpiry=new Map();// cacheKey -> expiryTime\n// Configura√ß√µes de performance\nconst CACHE_DURATION=5*60*1000;// 5 minutos\nconst MAX_CACHE_SIZE=100;// M√°ximo 100 entradas no cache\n// Fun√ß√£o para ler arquivo Excel/CSV (otimizada)\nexport async function readSpreadsheetFile(file){try{var _processedData$column;SPREADSHEET_LOGS.addLog('info','Iniciando leitura otimizada da planilha',{fileName:file.name});const startTime=performance.now();const data=await file.arrayBuffer();const workbook=XLSX.read(data,{type:'array'});// Pegar a primeira planilha\nconst sheetName=workbook.SheetNames[0];const worksheet=workbook.Sheets[sheetName];// Converter para JSON com otimiza√ß√µes\nconst jsonData=XLSX.utils.sheet_to_json(worksheet,{header:1,defval:'',// Valor padr√£o para c√©lulas vazias\nraw:false// Processar valores como strings\n});// Processar dados com √≠ndices\nconst processedData=processSpreadsheetDataOptimized(jsonData);// Salvar no cache\nspreadsheetData=processedData;lastModified=new Date();// Construir √≠ndices para busca r√°pida\nbuildIndexes(processedData.data);// Limpar cache antigo\nclearExpiredCache();const endTime=performance.now();const processingTime=Math.round(endTime-startTime);SPREADSHEET_LOGS.addLog('success',\"Planilha processada em \".concat(processingTime,\"ms\"),{rows:processedData.length,columns:((_processedData$column=processedData.columns)===null||_processedData$column===void 0?void 0:_processedData$column.length)||0,indexes:{agents:agentIndex.size,dates:dateIndex.size,status:statusIndex.size,filas:filaIndex.size}});return processedData;}catch(error){SPREADSHEET_LOGS.addLog('error',\"Erro ao ler planilha: \".concat(error.message));throw error;}}// Processar dados da planilha (otimizado)\nfunction processSpreadsheetDataOptimized(rawData){if(!rawData||rawData.length===0){throw new Error('Planilha vazia ou inv√°lida');}// Primeira linha s√£o os cabe√ßalhos\nconst headers=rawData[0];const rows=rawData.slice(1);// Mapear colunas essenciais\nconst columnMap=mapEssentialColumns(headers);// Processar cada linha com otimiza√ß√µes\nconst processedRows=rows.map((row,index)=>{const processedRow={id:index+1,raw:row};// Mapear dados essenciais\nObject.keys(columnMap).forEach(key=>{const columnIndex=columnMap[key];processedRow[key]=columnIndex!==-1?row[columnIndex]:null;});return processedRow;});return{headers,columns:columnMap,data:processedRows,totalRows:processedRows.length,lastProcessed:new Date().toISOString()};}// Construir √≠ndices para busca ultra-r√°pida\nfunction buildIndexes(data){// Limpar √≠ndices existentes\nagentIndex.clear();dateIndex.clear();statusIndex.clear();filaIndex.clear();data.forEach((row,index)=>{// √çndice por agente\nif(row.agente){const agentKey=row.agente.toString().toLowerCase();if(!agentIndex.has(agentKey)){agentIndex.set(agentKey,[]);}agentIndex.get(agentKey).push(index);}// √çndice por data\nif(row.data){const date=parseDate(row.data);if(date){const dateKey=date.toISOString().split('T')[0];if(!dateIndex.has(dateKey)){dateIndex.set(dateKey,[]);}dateIndex.get(dateKey).push(index);}}// √çndice por status\nif(row.status){const statusKey=row.status.toString().toLowerCase();if(!statusIndex.has(statusKey)){statusIndex.set(statusKey,[]);}statusIndex.get(statusKey).push(index);}// √çndice por fila\nif(row.fila){const filaKey=row.fila.toString();if(!filaIndex.has(filaKey)){filaIndex.set(filaKey,[]);}filaIndex.get(filaKey).push(index);}});SPREADSHEET_LOGS.addLog('info','√çndices constru√≠dos',{agents:agentIndex.size,dates:dateIndex.size,status:statusIndex.size,filas:filaIndex.size});}// Motor de c√°lculo ultra-r√°pido - Extrair dados por agente\nexport function getDataByAgent(agentName){let startDate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let endDate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(!spreadsheetData){throw new Error('Nenhuma planilha carregada');}const startTime=performance.now();// Gerar chave do cache\nconst cacheKey=\"agent_\".concat(agentName,\"_\").concat((startDate===null||startDate===void 0?void 0:startDate.getTime())||'null',\"_\").concat((endDate===null||endDate===void 0?void 0:endDate.getTime())||'null');// Verificar cache\nif(metricsCache.has(cacheKey)&&!isCacheExpired(cacheKey)){const cachedResult=metricsCache.get(cacheKey);const endTime=performance.now();SPREADSHEET_LOGS.addLog('info',\"Cache hit para agente \".concat(agentName,\" (\").concat(Math.round(endTime-startTime),\"ms)\"));return cachedResult;}SPREADSHEET_LOGS.addLog('info',\"Buscando dados do agente: \".concat(agentName));// Busca otimizada usando √≠ndices\nlet filteredData=getFilteredDataByAgent(agentName,startDate,endDate);// Calcular m√©tricas\nconst metrics=calculateAgentMetricsOptimized(filteredData);const result={agent:agentName,period:{startDate,endDate},data:filteredData,metrics,summary:{totalRecords:filteredData.length,dateRange:getDateRange(filteredData),lastUpdate:new Date().toISOString()}};// Salvar no cache\nmetricsCache.set(cacheKey,result);cacheExpiry.set(cacheKey,Date.now()+CACHE_DURATION);const endTime=performance.now();const processingTime=Math.round(endTime-startTime);SPREADSHEET_LOGS.addLog('success',\"Dados do agente \".concat(agentName,\" extra\\xEDdos em \").concat(processingTime,\"ms\"),{totalRecords:filteredData.length,metrics:Object.keys(metrics).length,cacheSize:metricsCache.size});return result;}// Busca otimizada por agente usando √≠ndices\nfunction getFilteredDataByAgent(agentName,startDate,endDate){const agentKey=agentName.toLowerCase();const agentRowIds=agentIndex.get(agentKey)||[];SPREADSHEET_LOGS.addLog('info',\"Buscando dados para agente: \".concat(agentName,\" (\").concat(agentRowIds.length,\" registros encontrados)\"));if(agentRowIds.length===0){SPREADSHEET_LOGS.addLog('warning',\"Nenhum registro encontrado para agente: \".concat(agentName));return[];}// Se n√£o h√° filtro de data, retornar todos os dados do agente\nif(!startDate&&!endDate){SPREADSHEET_LOGS.addLog('info',\"Retornando todos os \".concat(agentRowIds.length,\" registros do agente \").concat(agentName));return agentRowIds.map(id=>spreadsheetData.data[id]);}// Filtrar por data usando √≠ndice de data\nconst filteredRowIds=new Set();// Iterar pelas datas no per√≠odo\nconst currentDate=new Date(startDate||new Date(0));const endDateToUse=endDate||new Date();SPREADSHEET_LOGS.addLog('info',\"Filtrando por per\\xEDodo: \".concat(currentDate.toISOString(),\" at\\xE9 \").concat(endDateToUse.toISOString()));while(currentDate<=endDateToUse){const dateKey=currentDate.toISOString().split('T')[0];const dateRowIds=dateIndex.get(dateKey)||[];// Intersec√ß√£o entre agentes e datas\ndateRowIds.forEach(id=>{if(agentRowIds.includes(id)){filteredRowIds.add(id);}});currentDate.setDate(currentDate.getDate()+1);}const result=Array.from(filteredRowIds).map(id=>spreadsheetData.data[id]);SPREADSHEET_LOGS.addLog('info',\"Filtro por data resultou em \".concat(result.length,\" registros para agente \").concat(agentName));return result;}// Motor de c√°lculo ultra-r√°pido - Extrair dados por per√≠odo\nexport function getDataByPeriod(startDate,endDate){let agentFilter=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(!spreadsheetData){throw new Error('Nenhuma planilha carregada');}const startTime=performance.now();// Gerar chave do cache\nconst cacheKey=\"period_\".concat(startDate.getTime(),\"_\").concat(endDate.getTime(),\"_\").concat(agentFilter||'all');// Verificar cache\nif(metricsCache.has(cacheKey)&&!isCacheExpired(cacheKey)){const cachedResult=metricsCache.get(cacheKey);const endTime=performance.now();SPREADSHEET_LOGS.addLog('info',\"Cache hit para per\\xEDodo (\".concat(Math.round(endTime-startTime),\"ms)\"));return cachedResult;}SPREADSHEET_LOGS.addLog('info',\"Buscando dados do per\\xEDodo: \".concat(startDate,\" - \").concat(endDate));// Busca otimizada usando √≠ndices\nlet filteredData=getFilteredDataByPeriod(startDate,endDate,agentFilter);// Calcular m√©tricas\nconst metrics=calculatePeriodMetricsOptimized(filteredData);const result={period:{startDate,endDate},agentFilter,data:filteredData,metrics,summary:{totalRecords:filteredData.length,agents:getUniqueAgents(filteredData),dateRange:getDateRange(filteredData),lastUpdate:new Date().toISOString()}};// Salvar no cache\nmetricsCache.set(cacheKey,result);cacheExpiry.set(cacheKey,Date.now()+CACHE_DURATION);const endTime=performance.now();const processingTime=Math.round(endTime-startTime);SPREADSHEET_LOGS.addLog('success',\"Dados do per\\xEDodo extra\\xEDdos em \".concat(processingTime,\"ms\"),{totalRecords:filteredData.length,metrics:Object.keys(metrics).length,cacheSize:metricsCache.size});return result;}// Busca otimizada por per√≠odo usando √≠ndices\nfunction getFilteredDataByPeriod(startDate,endDate,agentFilter){const filteredRowIds=new Set();// Iterar pelas datas no per√≠odo\nconst currentDate=new Date(startDate);while(currentDate<=endDate){const dateKey=currentDate.toISOString().split('T')[0];const dateRowIds=dateIndex.get(dateKey)||[];dateRowIds.forEach(id=>{filteredRowIds.add(id);});currentDate.setDate(currentDate.getDate()+1);}let result=Array.from(filteredRowIds).map(id=>spreadsheetData.data[id]);// Filtrar por agente se especificado\nif(agentFilter){const agentKey=agentFilter.toLowerCase();const agentRowIds=agentIndex.get(agentKey)||[];const agentRowIdsSet=new Set(agentRowIds);result=result.filter(row=>agentRowIdsSet.has(row.id-1));}return result;}// Calcular m√©tricas do agente (otimizado)\nfunction calculateAgentMetricsOptimized(data){const metrics={totalChamadas:0,totalDuracao:0,chamadasAtendidas:0,chamadasAbandonadas:0,tempoMedioAtendimento:0,satisfacaoMedia:0,filas:{},status:{}};let totalSatisfacao=0;let countSatisfacao=0;// Processamento otimizado em uma √∫nica passada\nfor(let i=0;i<data.length;i++){const row=data[i];// Contar chamadas\nif(row.chamadas){metrics.totalChamadas+=parseInt(row.chamadas)||0;}// Somar dura√ß√£o\nif(row.duracao){metrics.totalDuracao+=parseDuration(row.duracao);}// Contar por status\nif(row.status){const status=row.status.toString().toLowerCase();metrics.status[status]=(metrics.status[status]||0)+1;if(status.includes('atend')||status.includes('success')){metrics.chamadasAtendidas++;}else if(status.includes('abandon')||status.includes('lost')){metrics.chamadasAbandonadas++;}}// Contar por fila\nif(row.fila){const fila=row.fila.toString();metrics.filas[fila]=(metrics.filas[fila]||0)+1;}// Somar satisfa√ß√£o\nif(row.satisfacao){const satisfacao=parseFloat(row.satisfacao);if(!isNaN(satisfacao)){totalSatisfacao+=satisfacao;countSatisfacao++;}}}// Calcular m√©dias\nif(metrics.chamadasAtendidas>0){metrics.tempoMedioAtendimento=metrics.totalDuracao/metrics.chamadasAtendidas;}if(countSatisfacao>0){metrics.satisfacaoMedia=totalSatisfacao/countSatisfacao;}return metrics;}// Calcular m√©tricas do per√≠odo (otimizado)\nfunction calculatePeriodMetricsOptimized(data){const metrics={totalChamadas:0,totalDuracao:0,chamadasAtendidas:0,chamadasAbandonadas:0,tempoMedioAtendimento:0,satisfacaoMedia:0,agentes:{},filas:{},status:{},evolucaoDiaria:{}};let totalSatisfacao=0;let countSatisfacao=0;// Processamento otimizado em uma √∫nica passada\nfor(let i=0;i<data.length;i++){const row=data[i];// Contar chamadas\nif(row.chamadas){metrics.totalChamadas+=parseInt(row.chamadas)||0;}// Somar dura√ß√£o\nif(row.duracao){metrics.totalDuracao+=parseDuration(row.duracao);}// Contar por agente\nif(row.agente){const agente=row.agente.toString();if(!metrics.agentes[agente]){metrics.agentes[agente]={chamadas:0,duracao:0,satisfacao:0,countSatisfacao:0};}metrics.agentes[agente].chamadas+=parseInt(row.chamadas)||0;metrics.agentes[agente].duracao+=parseDuration(row.duracao);if(row.satisfacao){const satisfacao=parseFloat(row.satisfacao);if(!isNaN(satisfacao)){metrics.agentes[agente].satisfacao+=satisfacao;metrics.agentes[agente].countSatisfacao++;}}}// Contar por status\nif(row.status){const status=row.status.toString().toLowerCase();metrics.status[status]=(metrics.status[status]||0)+1;if(status.includes('atend')||status.includes('success')){metrics.chamadasAtendidas++;}else if(status.includes('abandon')||status.includes('lost')){metrics.chamadasAbandonadas++;}}// Contar por fila\nif(row.fila){const fila=row.fila.toString();metrics.filas[fila]=(metrics.filas[fila]||0)+1;}// Evolu√ß√£o di√°ria\nif(row.data){const date=parseDate(row.data);if(date){const dateStr=date.toISOString().split('T')[0];if(!metrics.evolucaoDiaria[dateStr]){metrics.evolucaoDiaria[dateStr]={chamadas:0,duracao:0};}metrics.evolucaoDiaria[dateStr].chamadas+=parseInt(row.chamadas)||0;metrics.evolucaoDiaria[dateStr].duracao+=parseDuration(row.duracao);}}// Somar satisfa√ß√£o\nif(row.satisfacao){const satisfacao=parseFloat(row.satisfacao);if(!isNaN(satisfacao)){totalSatisfacao+=satisfacao;countSatisfacao++;}}}// Calcular m√©dias\nif(metrics.chamadasAtendidas>0){metrics.tempoMedioAtendimento=metrics.totalDuracao/metrics.chamadasAtendidas;}if(countSatisfacao>0){metrics.satisfacaoMedia=totalSatisfacao/countSatisfacao;}// Calcular m√©dias dos agentes\nObject.keys(metrics.agentes).forEach(agente=>{const agenteData=metrics.agentes[agente];if(agenteData.countSatisfacao>0){agenteData.satisfacaoMedia=agenteData.satisfacao/agenteData.countSatisfacao;}if(agenteData.chamadas>0){agenteData.tempoMedioAtendimento=agenteData.duracao/agenteData.chamadas;}});return metrics;}// Fun√ß√µes auxiliares otimizadas\nfunction parseDate(dateStr){if(!dateStr)return null;try{// Tentar diferentes formatos de data\nlet date;// Formato brasileiro DD/MM/YYYY\nif(dateStr.includes('/')){const parts=dateStr.split('/');if(parts.length===3){date=new Date(parts[2],parts[1]-1,parts[0]);}}// Formato ISO YYYY-MM-DD\nelse if(dateStr.includes('-')){date=new Date(dateStr);}// Formato padr√£o\nelse{date=new Date(dateStr);}if(isNaN(date.getTime())){SPREADSHEET_LOGS.addLog('warning',\"Data inv\\xE1lida: \".concat(dateStr));return null;}return date;}catch(error){SPREADSHEET_LOGS.addLog('error',\"Erro ao parsear data: \".concat(dateStr,\" - \").concat(error.message));return null;}}function parseDuration(durationStr){if(!durationStr)return 0;try{if(typeof durationStr==='number')return durationStr;const str=durationStr.toString();// Formato HH:MM:SS\nif(str.includes(':')){const parts=str.split(':');if(parts.length===3){return parseInt(parts[0])*3600+parseInt(parts[1])*60+parseInt(parts[2]);}else if(parts.length===2){return parseInt(parts[0])*60+parseInt(parts[1]);}}// Formato em segundos\nreturn parseInt(str)||0;}catch(error){return 0;}}function getDateRange(data){if(!data||data.length===0)return null;let minDate=null;let maxDate=null;for(let i=0;i<data.length;i++){const date=parseDate(data[i].data);if(date){if(!minDate||date<minDate)minDate=date;if(!maxDate||date>maxDate)maxDate=date;}}if(!minDate||!maxDate)return null;return{start:minDate,end:maxDate};}function getUniqueAgents(data){const agents=new Set();for(let i=0;i<data.length;i++){if(data[i].agente){agents.add(data[i].agente.toString());}}return Array.from(agents);}// Gerenciamento de cache\nfunction isCacheExpired(cacheKey){const expiry=cacheExpiry.get(cacheKey);return!expiry||Date.now()>expiry;}function clearExpiredCache(){const now=Date.now();const expiredKeys=[];cacheExpiry.forEach((expiry,key)=>{if(now>expiry){expiredKeys.push(key);}});expiredKeys.forEach(key=>{metricsCache.delete(key);cacheExpiry.delete(key);});// Limitar tamanho do cache\nif(metricsCache.size>MAX_CACHE_SIZE){const keys=Array.from(metricsCache.keys());const keysToDelete=keys.slice(0,keys.length-MAX_CACHE_SIZE);keysToDelete.forEach(key=>{metricsCache.delete(key);cacheExpiry.delete(key);});}}// Mapear colunas essenciais (mesmo da vers√£o original)\nfunction mapEssentialColumns(headers){const columnMap={agente:-1,data:-1,hora:-1,chamadas:-1,duracao:-1,status:-1,fila:-1,satisfacao:-1};// Buscar colunas por nome (case insensitive)\nheaders.forEach((header,index)=>{if(!header)return;const headerLower=header.toLowerCase().trim();// Mapear agente\nif(headerLower.includes('agente')||headerLower.includes('agent')||headerLower.includes('operador')){columnMap.agente=index;}// Mapear data\nif(headerLower.includes('data')||headerLower.includes('date')||headerLower.includes('dia')){columnMap.data=index;}// Mapear hora\nif(headerLower.includes('hora')||headerLower.includes('time')||headerLower.includes('horario')){columnMap.hora=index;}// Mapear chamadas\nif(headerLower.includes('chamada')||headerLower.includes('call')||headerLower.includes('ligacao')){columnMap.chamadas=index;}// Mapear dura√ß√£o\nif(headerLower.includes('duracao')||headerLower.includes('duration')||headerLower.includes('tempo')){columnMap.duracao=index;}// Mapear status\nif(headerLower.includes('status')||headerLower.includes('situacao')||headerLower.includes('estado')){columnMap.status=index;}// Mapear fila\nif(headerLower.includes('fila')||headerLower.includes('queue')||headerLower.includes('grupo')){columnMap.fila=index;}// Mapear satisfa√ß√£o\nif(headerLower.includes('satisfacao')||headerLower.includes('satisfaction')||headerLower.includes('avaliacao')){columnMap.satisfacao=index;}});return columnMap;}// Fun√ß√µes de utilidade (mesmas da vers√£o original)\nexport function getSpreadsheetInfo(){if(!spreadsheetData){return{loaded:false,message:'Nenhuma planilha carregada'};}return{loaded:true,totalRows:spreadsheetData.totalRows,columns:spreadsheetData.columns,lastProcessed:spreadsheetData.lastProcessed,lastModified:lastModified,cacheInfo:{size:metricsCache.size,maxSize:MAX_CACHE_SIZE,indexes:{agents:agentIndex.size,dates:dateIndex.size,status:statusIndex.size,filas:filaIndex.size}}};}export function getAvailableAgents(){if(!spreadsheetData)return[];return Array.from(agentIndex.keys()).map(key=>{var _spreadsheetData$data;return((_spreadsheetData$data=spreadsheetData.data[agentIndex.get(key)[0]])===null||_spreadsheetData$data===void 0?void 0:_spreadsheetData$data.agente)||key;});}export function getAvailablePeriods(){if(!spreadsheetData)return null;return getDateRange(spreadsheetData.data);}export function clearSpreadsheetData(){spreadsheetData=null;lastModified=null;// Limpar √≠ndices\nagentIndex.clear();dateIndex.clear();statusIndex.clear();filaIndex.clear();// Limpar cache\nmetricsCache.clear();cacheExpiry.clear();SPREADSHEET_LOGS.clearLogs();}// Fun√ß√£o para obter estat√≠sticas de performance\nexport function getPerformanceStats(){var _spreadsheetData;return{cache:{size:metricsCache.size,maxSize:MAX_CACHE_SIZE,hitRate:calculateCacheHitRate()},indexes:{agents:agentIndex.size,dates:dateIndex.size,status:statusIndex.size,filas:filaIndex.size},data:{totalRows:((_spreadsheetData=spreadsheetData)===null||_spreadsheetData===void 0?void 0:_spreadsheetData.totalRows)||0,lastModified:lastModified}};}function calculateCacheHitRate(){// Implementa√ß√£o simples - pode ser melhorada com contadores\nreturn metricsCache.size>0?'Ativo':'Inativo';}","map":{"version":3,"names":["XLSX","SPREADSHEET_LOGS","logs","addLog","type","message","data","arguments","length","undefined","log","timestamp","Date","toISOString","push","slice","getLogs","clearLogs","spreadsheetData","lastModified","agentIndex","Map","dateIndex","statusIndex","filaIndex","metricsCache","cacheExpiry","CACHE_DURATION","MAX_CACHE_SIZE","readSpreadsheetFile","file","_processedData$column","fileName","name","startTime","performance","now","arrayBuffer","workbook","read","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","defval","raw","processedData","processSpreadsheetDataOptimized","buildIndexes","clearExpiredCache","endTime","processingTime","Math","round","concat","rows","columns","indexes","agents","size","dates","status","filas","error","rawData","Error","headers","columnMap","mapEssentialColumns","processedRows","map","row","index","processedRow","id","Object","keys","forEach","key","columnIndex","totalRows","lastProcessed","clear","agente","agentKey","toString","toLowerCase","has","set","get","date","parseDate","dateKey","split","statusKey","fila","filaKey","getDataByAgent","agentName","startDate","endDate","cacheKey","getTime","isCacheExpired","cachedResult","filteredData","getFilteredDataByAgent","metrics","calculateAgentMetricsOptimized","result","agent","period","summary","totalRecords","dateRange","getDateRange","lastUpdate","cacheSize","agentRowIds","filteredRowIds","Set","currentDate","endDateToUse","dateRowIds","includes","add","setDate","getDate","Array","from","getDataByPeriod","agentFilter","getFilteredDataByPeriod","calculatePeriodMetricsOptimized","getUniqueAgents","agentRowIdsSet","filter","totalChamadas","totalDuracao","chamadasAtendidas","chamadasAbandonadas","tempoMedioAtendimento","satisfacaoMedia","totalSatisfacao","countSatisfacao","i","chamadas","parseInt","duracao","parseDuration","satisfacao","parseFloat","isNaN","agentes","evolucaoDiaria","dateStr","agenteData","parts","durationStr","str","minDate","maxDate","start","end","expiry","expiredKeys","delete","keysToDelete","hora","headerLower","trim","getSpreadsheetInfo","loaded","cacheInfo","maxSize","getAvailableAgents","_spreadsheetData$data","getAvailablePeriods","clearSpreadsheetData","getPerformanceStats","_spreadsheetData","cache","hitRate","calculateCacheHitRate"],"sources":["C:/Users/lucas/OneDrive/Documentos/Code - CONSOLE DE CONTEUDO/igp-src/src/services/spreadsheetService.js"],"sourcesContent":["// üöÄ Servi√ßo de Integra√ß√£o com Planilha - VERS√ÉO OTIMIZADA\r\n// Motor de c√°lculo ultra-r√°pido com cache inteligente e √≠ndices\r\n\r\nimport * as XLSX from 'xlsx';\r\n\r\n// Sistema de logs otimizado\r\nexport const SPREADSHEET_LOGS = {\r\n  logs: [],\r\n  addLog: function (type, message, data = null) {\r\n    const log = {\r\n      timestamp: new Date().toISOString(),\r\n      type: type,\r\n      message: message,\r\n      data: data,\r\n    };\r\n    this.logs.push(log);\r\n    \r\n    // Manter apenas os √∫ltimos 50 logs\r\n    if (this.logs.length > 50) {\r\n      this.logs = this.logs.slice(-50);\r\n    }\r\n  },\r\n  getLogs: function () {\r\n    return this.logs;\r\n  },\r\n  clearLogs: function () {\r\n    this.logs = [];\r\n  },\r\n};\r\n\r\n// Cache otimizado com √≠ndices\r\nlet spreadsheetData = null;\r\nlet lastModified = null;\r\n\r\n// √çndices para busca ultra-r√°pida\r\nlet agentIndex = new Map(); // agentName -> [rowIds]\r\nlet dateIndex = new Map(); // dateString -> [rowIds]\r\nlet statusIndex = new Map(); // status -> [rowIds]\r\nlet filaIndex = new Map(); // fila -> [rowIds]\r\n\r\n// Cache de m√©tricas calculadas\r\nlet metricsCache = new Map(); // cacheKey -> metrics\r\nlet cacheExpiry = new Map(); // cacheKey -> expiryTime\r\n\r\n// Configura√ß√µes de performance\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutos\r\nconst MAX_CACHE_SIZE = 100; // M√°ximo 100 entradas no cache\r\n\r\n// Fun√ß√£o para ler arquivo Excel/CSV (otimizada)\r\nexport async function readSpreadsheetFile(file) {\r\n  try {\r\n    SPREADSHEET_LOGS.addLog('info', 'Iniciando leitura otimizada da planilha', { fileName: file.name });\r\n    \r\n    const startTime = performance.now();\r\n    \r\n    const data = await file.arrayBuffer();\r\n    const workbook = XLSX.read(data, { type: 'array' });\r\n    \r\n    // Pegar a primeira planilha\r\n    const sheetName = workbook.SheetNames[0];\r\n    const worksheet = workbook.Sheets[sheetName];\r\n    \r\n    // Converter para JSON com otimiza√ß√µes\r\n    const jsonData = XLSX.utils.sheet_to_json(worksheet, { \r\n      header: 1,\r\n      defval: '', // Valor padr√£o para c√©lulas vazias\r\n      raw: false // Processar valores como strings\r\n    });\r\n    \r\n    // Processar dados com √≠ndices\r\n    const processedData = processSpreadsheetDataOptimized(jsonData);\r\n    \r\n    // Salvar no cache\r\n    spreadsheetData = processedData;\r\n    lastModified = new Date();\r\n    \r\n    // Construir √≠ndices para busca r√°pida\r\n    buildIndexes(processedData.data);\r\n    \r\n    // Limpar cache antigo\r\n    clearExpiredCache();\r\n    \r\n    const endTime = performance.now();\r\n    const processingTime = Math.round(endTime - startTime);\r\n    \r\n    SPREADSHEET_LOGS.addLog('success', `Planilha processada em ${processingTime}ms`, { \r\n      rows: processedData.length,\r\n      columns: processedData.columns?.length || 0,\r\n      indexes: {\r\n        agents: agentIndex.size,\r\n        dates: dateIndex.size,\r\n        status: statusIndex.size,\r\n        filas: filaIndex.size\r\n      }\r\n    });\r\n    \r\n    return processedData;\r\n    \r\n  } catch (error) {\r\n    SPREADSHEET_LOGS.addLog('error', `Erro ao ler planilha: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Processar dados da planilha (otimizado)\r\nfunction processSpreadsheetDataOptimized(rawData) {\r\n  if (!rawData || rawData.length === 0) {\r\n    throw new Error('Planilha vazia ou inv√°lida');\r\n  }\r\n  \r\n  // Primeira linha s√£o os cabe√ßalhos\r\n  const headers = rawData[0];\r\n  const rows = rawData.slice(1);\r\n  \r\n  // Mapear colunas essenciais\r\n  const columnMap = mapEssentialColumns(headers);\r\n  \r\n  // Processar cada linha com otimiza√ß√µes\r\n  const processedRows = rows.map((row, index) => {\r\n    const processedRow = {\r\n      id: index + 1,\r\n      raw: row\r\n    };\r\n    \r\n    // Mapear dados essenciais\r\n    Object.keys(columnMap).forEach(key => {\r\n      const columnIndex = columnMap[key];\r\n      processedRow[key] = columnIndex !== -1 ? row[columnIndex] : null;\r\n    });\r\n    \r\n    return processedRow;\r\n  });\r\n  \r\n  return {\r\n    headers,\r\n    columns: columnMap,\r\n    data: processedRows,\r\n    totalRows: processedRows.length,\r\n    lastProcessed: new Date().toISOString()\r\n  };\r\n}\r\n\r\n// Construir √≠ndices para busca ultra-r√°pida\r\nfunction buildIndexes(data) {\r\n  // Limpar √≠ndices existentes\r\n  agentIndex.clear();\r\n  dateIndex.clear();\r\n  statusIndex.clear();\r\n  filaIndex.clear();\r\n  \r\n  data.forEach((row, index) => {\r\n    // √çndice por agente\r\n    if (row.agente) {\r\n      const agentKey = row.agente.toString().toLowerCase();\r\n      if (!agentIndex.has(agentKey)) {\r\n        agentIndex.set(agentKey, []);\r\n      }\r\n      agentIndex.get(agentKey).push(index);\r\n    }\r\n    \r\n    // √çndice por data\r\n    if (row.data) {\r\n      const date = parseDate(row.data);\r\n      if (date) {\r\n        const dateKey = date.toISOString().split('T')[0];\r\n        if (!dateIndex.has(dateKey)) {\r\n          dateIndex.set(dateKey, []);\r\n        }\r\n        dateIndex.get(dateKey).push(index);\r\n      }\r\n    }\r\n    \r\n    // √çndice por status\r\n    if (row.status) {\r\n      const statusKey = row.status.toString().toLowerCase();\r\n      if (!statusIndex.has(statusKey)) {\r\n        statusIndex.set(statusKey, []);\r\n      }\r\n      statusIndex.get(statusKey).push(index);\r\n    }\r\n    \r\n    // √çndice por fila\r\n    if (row.fila) {\r\n      const filaKey = row.fila.toString();\r\n      if (!filaIndex.has(filaKey)) {\r\n        filaIndex.set(filaKey, []);\r\n      }\r\n      filaIndex.get(filaKey).push(index);\r\n    }\r\n  });\r\n  \r\n  SPREADSHEET_LOGS.addLog('info', '√çndices constru√≠dos', {\r\n    agents: agentIndex.size,\r\n    dates: dateIndex.size,\r\n    status: statusIndex.size,\r\n    filas: filaIndex.size\r\n  });\r\n}\r\n\r\n// Motor de c√°lculo ultra-r√°pido - Extrair dados por agente\r\nexport function getDataByAgent(agentName, startDate = null, endDate = null) {\r\n  if (!spreadsheetData) {\r\n    throw new Error('Nenhuma planilha carregada');\r\n  }\r\n  \r\n  const startTime = performance.now();\r\n  \r\n  // Gerar chave do cache\r\n  const cacheKey = `agent_${agentName}_${startDate?.getTime() || 'null'}_${endDate?.getTime() || 'null'}`;\r\n  \r\n  // Verificar cache\r\n  if (metricsCache.has(cacheKey) && !isCacheExpired(cacheKey)) {\r\n    const cachedResult = metricsCache.get(cacheKey);\r\n    const endTime = performance.now();\r\n    SPREADSHEET_LOGS.addLog('info', `Cache hit para agente ${agentName} (${Math.round(endTime - startTime)}ms)`);\r\n    return cachedResult;\r\n  }\r\n  \r\n  SPREADSHEET_LOGS.addLog('info', `Buscando dados do agente: ${agentName}`);\r\n  \r\n  // Busca otimizada usando √≠ndices\r\n  let filteredData = getFilteredDataByAgent(agentName, startDate, endDate);\r\n  \r\n  // Calcular m√©tricas\r\n  const metrics = calculateAgentMetricsOptimized(filteredData);\r\n  \r\n  const result = {\r\n    agent: agentName,\r\n    period: { startDate, endDate },\r\n    data: filteredData,\r\n    metrics,\r\n    summary: {\r\n      totalRecords: filteredData.length,\r\n      dateRange: getDateRange(filteredData),\r\n      lastUpdate: new Date().toISOString()\r\n    }\r\n  };\r\n  \r\n  // Salvar no cache\r\n  metricsCache.set(cacheKey, result);\r\n  cacheExpiry.set(cacheKey, Date.now() + CACHE_DURATION);\r\n  \r\n  const endTime = performance.now();\r\n  const processingTime = Math.round(endTime - startTime);\r\n  \r\n  SPREADSHEET_LOGS.addLog('success', `Dados do agente ${agentName} extra√≠dos em ${processingTime}ms`, { \r\n    totalRecords: filteredData.length,\r\n    metrics: Object.keys(metrics).length,\r\n    cacheSize: metricsCache.size\r\n  });\r\n  \r\n  return result;\r\n}\r\n\r\n// Busca otimizada por agente usando √≠ndices\r\nfunction getFilteredDataByAgent(agentName, startDate, endDate) {\r\n  const agentKey = agentName.toLowerCase();\r\n  const agentRowIds = agentIndex.get(agentKey) || [];\r\n  \r\n  SPREADSHEET_LOGS.addLog('info', `Buscando dados para agente: ${agentName} (${agentRowIds.length} registros encontrados)`);\r\n  \r\n  if (agentRowIds.length === 0) {\r\n    SPREADSHEET_LOGS.addLog('warning', `Nenhum registro encontrado para agente: ${agentName}`);\r\n    return [];\r\n  }\r\n  \r\n  // Se n√£o h√° filtro de data, retornar todos os dados do agente\r\n  if (!startDate && !endDate) {\r\n    SPREADSHEET_LOGS.addLog('info', `Retornando todos os ${agentRowIds.length} registros do agente ${agentName}`);\r\n    return agentRowIds.map(id => spreadsheetData.data[id]);\r\n  }\r\n  \r\n  // Filtrar por data usando √≠ndice de data\r\n  const filteredRowIds = new Set();\r\n  \r\n  // Iterar pelas datas no per√≠odo\r\n  const currentDate = new Date(startDate || new Date(0));\r\n  const endDateToUse = endDate || new Date();\r\n  \r\n  SPREADSHEET_LOGS.addLog('info', `Filtrando por per√≠odo: ${currentDate.toISOString()} at√© ${endDateToUse.toISOString()}`);\r\n  \r\n  while (currentDate <= endDateToUse) {\r\n    const dateKey = currentDate.toISOString().split('T')[0];\r\n    const dateRowIds = dateIndex.get(dateKey) || [];\r\n    \r\n    // Intersec√ß√£o entre agentes e datas\r\n    dateRowIds.forEach(id => {\r\n      if (agentRowIds.includes(id)) {\r\n        filteredRowIds.add(id);\r\n      }\r\n    });\r\n\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n  \r\n  const result = Array.from(filteredRowIds).map(id => spreadsheetData.data[id]);\r\n  SPREADSHEET_LOGS.addLog('info', `Filtro por data resultou em ${result.length} registros para agente ${agentName}`);\r\n  \r\n  return result;\r\n}\r\n\r\n// Motor de c√°lculo ultra-r√°pido - Extrair dados por per√≠odo\r\nexport function getDataByPeriod(startDate, endDate, agentFilter = null) {\r\n  if (!spreadsheetData) {\r\n    throw new Error('Nenhuma planilha carregada');\r\n  }\r\n  \r\n  const startTime = performance.now();\r\n  \r\n  // Gerar chave do cache\r\n  const cacheKey = `period_${startDate.getTime()}_${endDate.getTime()}_${agentFilter || 'all'}`;\r\n  \r\n  // Verificar cache\r\n  if (metricsCache.has(cacheKey) && !isCacheExpired(cacheKey)) {\r\n    const cachedResult = metricsCache.get(cacheKey);\r\n    const endTime = performance.now();\r\n    SPREADSHEET_LOGS.addLog('info', `Cache hit para per√≠odo (${Math.round(endTime - startTime)}ms)`);\r\n    return cachedResult;\r\n  }\r\n  \r\n  SPREADSHEET_LOGS.addLog('info', `Buscando dados do per√≠odo: ${startDate} - ${endDate}`);\r\n  \r\n  // Busca otimizada usando √≠ndices\r\n  let filteredData = getFilteredDataByPeriod(startDate, endDate, agentFilter);\r\n  \r\n  // Calcular m√©tricas\r\n  const metrics = calculatePeriodMetricsOptimized(filteredData);\r\n  \r\n  const result = {\r\n    period: { startDate, endDate },\r\n    agentFilter,\r\n    data: filteredData,\r\n    metrics,\r\n    summary: {\r\n      totalRecords: filteredData.length,\r\n      agents: getUniqueAgents(filteredData),\r\n      dateRange: getDateRange(filteredData),\r\n      lastUpdate: new Date().toISOString()\r\n    }\r\n  };\r\n  \r\n  // Salvar no cache\r\n  metricsCache.set(cacheKey, result);\r\n  cacheExpiry.set(cacheKey, Date.now() + CACHE_DURATION);\r\n  \r\n  const endTime = performance.now();\r\n  const processingTime = Math.round(endTime - startTime);\r\n  \r\n  SPREADSHEET_LOGS.addLog('success', `Dados do per√≠odo extra√≠dos em ${processingTime}ms`, { \r\n    totalRecords: filteredData.length,\r\n    metrics: Object.keys(metrics).length,\r\n    cacheSize: metricsCache.size\r\n  });\r\n  \r\n  return result;\r\n}\r\n\r\n// Busca otimizada por per√≠odo usando √≠ndices\r\nfunction getFilteredDataByPeriod(startDate, endDate, agentFilter) {\r\n  const filteredRowIds = new Set();\r\n  \r\n  // Iterar pelas datas no per√≠odo\r\n  const currentDate = new Date(startDate);\r\n  \r\n  while (currentDate <= endDate) {\r\n    const dateKey = currentDate.toISOString().split('T')[0];\r\n    const dateRowIds = dateIndex.get(dateKey) || [];\r\n    \r\n    dateRowIds.forEach(id => {\r\n      filteredRowIds.add(id);\r\n    });\r\n    \r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n  \r\n  let result = Array.from(filteredRowIds).map(id => spreadsheetData.data[id]);\r\n  \r\n  // Filtrar por agente se especificado\r\n  if (agentFilter) {\r\n    const agentKey = agentFilter.toLowerCase();\r\n    const agentRowIds = agentIndex.get(agentKey) || [];\r\n    const agentRowIdsSet = new Set(agentRowIds);\r\n    \r\n    result = result.filter(row => agentRowIdsSet.has(row.id - 1));\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\n// Calcular m√©tricas do agente (otimizado)\r\nfunction calculateAgentMetricsOptimized(data) {\r\n  const metrics = {\r\n    totalChamadas: 0,\r\n    totalDuracao: 0,\r\n    chamadasAtendidas: 0,\r\n    chamadasAbandonadas: 0,\r\n    tempoMedioAtendimento: 0,\r\n    satisfacaoMedia: 0,\r\n    filas: {},\r\n    status: {}\r\n  };\r\n  \r\n  let totalSatisfacao = 0;\r\n  let countSatisfacao = 0;\r\n  \r\n  // Processamento otimizado em uma √∫nica passada\r\n  for (let i = 0; i < data.length; i++) {\r\n    const row = data[i];\r\n    \r\n    // Contar chamadas\r\n    if (row.chamadas) {\r\n      metrics.totalChamadas += parseInt(row.chamadas) || 0;\r\n    }\r\n    \r\n    // Somar dura√ß√£o\r\n    if (row.duracao) {\r\n      metrics.totalDuracao += parseDuration(row.duracao);\r\n    }\r\n    \r\n    // Contar por status\r\n    if (row.status) {\r\n      const status = row.status.toString().toLowerCase();\r\n      metrics.status[status] = (metrics.status[status] || 0) + 1;\r\n      \r\n      if (status.includes('atend') || status.includes('success')) {\r\n        metrics.chamadasAtendidas++;\r\n      } else if (status.includes('abandon') || status.includes('lost')) {\r\n        metrics.chamadasAbandonadas++;\r\n      }\r\n    }\r\n    \r\n    // Contar por fila\r\n    if (row.fila) {\r\n      const fila = row.fila.toString();\r\n      metrics.filas[fila] = (metrics.filas[fila] || 0) + 1;\r\n    }\r\n    \r\n    // Somar satisfa√ß√£o\r\n    if (row.satisfacao) {\r\n      const satisfacao = parseFloat(row.satisfacao);\r\n      if (!isNaN(satisfacao)) {\r\n        totalSatisfacao += satisfacao;\r\n        countSatisfacao++;\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Calcular m√©dias\r\n  if (metrics.chamadasAtendidas > 0) {\r\n    metrics.tempoMedioAtendimento = metrics.totalDuracao / metrics.chamadasAtendidas;\r\n  }\r\n  \r\n  if (countSatisfacao > 0) {\r\n    metrics.satisfacaoMedia = totalSatisfacao / countSatisfacao;\r\n  }\r\n  \r\n  return metrics;\r\n}\r\n\r\n// Calcular m√©tricas do per√≠odo (otimizado)\r\nfunction calculatePeriodMetricsOptimized(data) {\r\n  const metrics = {\r\n    totalChamadas: 0,\r\n    totalDuracao: 0,\r\n    chamadasAtendidas: 0,\r\n    chamadasAbandonadas: 0,\r\n    tempoMedioAtendimento: 0,\r\n    satisfacaoMedia: 0,\r\n    agentes: {},\r\n    filas: {},\r\n    status: {},\r\n    evolucaoDiaria: {}\r\n  };\r\n  \r\n  let totalSatisfacao = 0;\r\n  let countSatisfacao = 0;\r\n  \r\n  // Processamento otimizado em uma √∫nica passada\r\n  for (let i = 0; i < data.length; i++) {\r\n    const row = data[i];\r\n    \r\n    // Contar chamadas\r\n    if (row.chamadas) {\r\n      metrics.totalChamadas += parseInt(row.chamadas) || 0;\r\n    }\r\n    \r\n    // Somar dura√ß√£o\r\n    if (row.duracao) {\r\n      metrics.totalDuracao += parseDuration(row.duracao);\r\n    }\r\n    \r\n    // Contar por agente\r\n    if (row.agente) {\r\n      const agente = row.agente.toString();\r\n      if (!metrics.agentes[agente]) {\r\n        metrics.agentes[agente] = {\r\n          chamadas: 0,\r\n          duracao: 0,\r\n          satisfacao: 0,\r\n          countSatisfacao: 0\r\n        };\r\n      }\r\n      metrics.agentes[agente].chamadas += parseInt(row.chamadas) || 0;\r\n      metrics.agentes[agente].duracao += parseDuration(row.duracao);\r\n      \r\n      if (row.satisfacao) {\r\n        const satisfacao = parseFloat(row.satisfacao);\r\n        if (!isNaN(satisfacao)) {\r\n          metrics.agentes[agente].satisfacao += satisfacao;\r\n          metrics.agentes[agente].countSatisfacao++;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Contar por status\r\n    if (row.status) {\r\n      const status = row.status.toString().toLowerCase();\r\n      metrics.status[status] = (metrics.status[status] || 0) + 1;\r\n      \r\n      if (status.includes('atend') || status.includes('success')) {\r\n        metrics.chamadasAtendidas++;\r\n      } else if (status.includes('abandon') || status.includes('lost')) {\r\n        metrics.chamadasAbandonadas++;\r\n      }\r\n    }\r\n    \r\n    // Contar por fila\r\n    if (row.fila) {\r\n      const fila = row.fila.toString();\r\n      metrics.filas[fila] = (metrics.filas[fila] || 0) + 1;\r\n    }\r\n    \r\n    // Evolu√ß√£o di√°ria\r\n    if (row.data) {\r\n      const date = parseDate(row.data);\r\n      if (date) {\r\n        const dateStr = date.toISOString().split('T')[0];\r\n        if (!metrics.evolucaoDiaria[dateStr]) {\r\n          metrics.evolucaoDiaria[dateStr] = {\r\n            chamadas: 0,\r\n            duracao: 0\r\n          };\r\n        }\r\n        metrics.evolucaoDiaria[dateStr].chamadas += parseInt(row.chamadas) || 0;\r\n        metrics.evolucaoDiaria[dateStr].duracao += parseDuration(row.duracao);\r\n      }\r\n    }\r\n    \r\n    // Somar satisfa√ß√£o\r\n    if (row.satisfacao) {\r\n      const satisfacao = parseFloat(row.satisfacao);\r\n      if (!isNaN(satisfacao)) {\r\n        totalSatisfacao += satisfacao;\r\n        countSatisfacao++;\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Calcular m√©dias\r\n  if (metrics.chamadasAtendidas > 0) {\r\n    metrics.tempoMedioAtendimento = metrics.totalDuracao / metrics.chamadasAtendidas;\r\n  }\r\n  \r\n  if (countSatisfacao > 0) {\r\n    metrics.satisfacaoMedia = totalSatisfacao / countSatisfacao;\r\n  }\r\n  \r\n  // Calcular m√©dias dos agentes\r\n  Object.keys(metrics.agentes).forEach(agente => {\r\n    const agenteData = metrics.agentes[agente];\r\n    if (agenteData.countSatisfacao > 0) {\r\n      agenteData.satisfacaoMedia = agenteData.satisfacao / agenteData.countSatisfacao;\r\n    }\r\n    if (agenteData.chamadas > 0) {\r\n      agenteData.tempoMedioAtendimento = agenteData.duracao / agenteData.chamadas;\r\n    }\r\n  });\r\n  \r\n  return metrics;\r\n}\r\n\r\n// Fun√ß√µes auxiliares otimizadas\r\nfunction parseDate(dateStr) {\r\n  if (!dateStr) return null;\r\n  \r\n  try {\r\n    // Tentar diferentes formatos de data\r\n    let date;\r\n    \r\n    // Formato brasileiro DD/MM/YYYY\r\n    if (dateStr.includes('/')) {\r\n      const parts = dateStr.split('/');\r\n      if (parts.length === 3) {\r\n        date = new Date(parts[2], parts[1] - 1, parts[0]);\r\n      }\r\n    }\r\n    // Formato ISO YYYY-MM-DD\r\n    else if (dateStr.includes('-')) {\r\n      date = new Date(dateStr);\r\n    }\r\n    // Formato padr√£o\r\n    else {\r\n      date = new Date(dateStr);\r\n    }\r\n    \r\n    if (isNaN(date.getTime())) {\r\n      SPREADSHEET_LOGS.addLog('warning', `Data inv√°lida: ${dateStr}`);\r\n      return null;\r\n    }\r\n    \r\n    return date;\r\n  } catch (error) {\r\n    SPREADSHEET_LOGS.addLog('error', `Erro ao parsear data: ${dateStr} - ${error.message}`);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction parseDuration(durationStr) {\r\n  if (!durationStr) return 0;\r\n  \r\n  try {\r\n    if (typeof durationStr === 'number') return durationStr;\r\n    \r\n    const str = durationStr.toString();\r\n    \r\n    // Formato HH:MM:SS\r\n    if (str.includes(':')) {\r\n      const parts = str.split(':');\r\n      if (parts.length === 3) {\r\n        return parseInt(parts[0]) * 3600 + parseInt(parts[1]) * 60 + parseInt(parts[2]);\r\n      } else if (parts.length === 2) {\r\n        return parseInt(parts[0]) * 60 + parseInt(parts[1]);\r\n      }\r\n    }\r\n    \r\n    // Formato em segundos\r\n    return parseInt(str) || 0;\r\n  } catch (error) {\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getDateRange(data) {\r\n  if (!data || data.length === 0) return null;\r\n  \r\n  let minDate = null;\r\n  let maxDate = null;\r\n  \r\n  for (let i = 0; i < data.length; i++) {\r\n    const date = parseDate(data[i].data);\r\n    if (date) {\r\n      if (!minDate || date < minDate) minDate = date;\r\n      if (!maxDate || date > maxDate) maxDate = date;\r\n    }\r\n  }\r\n  \r\n  if (!minDate || !maxDate) return null;\r\n  \r\n  return { start: minDate, end: maxDate };\r\n}\r\n\r\nfunction getUniqueAgents(data) {\r\n  const agents = new Set();\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (data[i].agente) {\r\n      agents.add(data[i].agente.toString());\r\n    }\r\n  }\r\n  return Array.from(agents);\r\n}\r\n\r\n// Gerenciamento de cache\r\nfunction isCacheExpired(cacheKey) {\r\n  const expiry = cacheExpiry.get(cacheKey);\r\n  return !expiry || Date.now() > expiry;\r\n}\r\n\r\nfunction clearExpiredCache() {\r\n  const now = Date.now();\r\n  const expiredKeys = [];\r\n  \r\n  cacheExpiry.forEach((expiry, key) => {\r\n    if (now > expiry) {\r\n      expiredKeys.push(key);\r\n    }\r\n  });\r\n  \r\n  expiredKeys.forEach(key => {\r\n    metricsCache.delete(key);\r\n    cacheExpiry.delete(key);\r\n  });\r\n  \r\n  // Limitar tamanho do cache\r\n  if (metricsCache.size > MAX_CACHE_SIZE) {\r\n    const keys = Array.from(metricsCache.keys());\r\n    const keysToDelete = keys.slice(0, keys.length - MAX_CACHE_SIZE);\r\n    keysToDelete.forEach(key => {\r\n      metricsCache.delete(key);\r\n      cacheExpiry.delete(key);\r\n    });\r\n  }\r\n}\r\n\r\n// Mapear colunas essenciais (mesmo da vers√£o original)\r\nfunction mapEssentialColumns(headers) {\r\n  const columnMap = {\r\n    agente: -1,\r\n    data: -1,\r\n    hora: -1,\r\n    chamadas: -1,\r\n    duracao: -1,\r\n    status: -1,\r\n    fila: -1,\r\n    satisfacao: -1\r\n  };\r\n  \r\n  // Buscar colunas por nome (case insensitive)\r\n  headers.forEach((header, index) => {\r\n    if (!header) return;\r\n    \r\n    const headerLower = header.toLowerCase().trim();\r\n    \r\n    // Mapear agente\r\n    if (headerLower.includes('agente') || headerLower.includes('agent') || headerLower.includes('operador')) {\r\n      columnMap.agente = index;\r\n    }\r\n    \r\n    // Mapear data\r\n    if (headerLower.includes('data') || headerLower.includes('date') || headerLower.includes('dia')) {\r\n      columnMap.data = index;\r\n    }\r\n    \r\n    // Mapear hora\r\n    if (headerLower.includes('hora') || headerLower.includes('time') || headerLower.includes('horario')) {\r\n      columnMap.hora = index;\r\n    }\r\n    \r\n    // Mapear chamadas\r\n    if (headerLower.includes('chamada') || headerLower.includes('call') || headerLower.includes('ligacao')) {\r\n      columnMap.chamadas = index;\r\n    }\r\n    \r\n    // Mapear dura√ß√£o\r\n    if (headerLower.includes('duracao') || headerLower.includes('duration') || headerLower.includes('tempo')) {\r\n      columnMap.duracao = index;\r\n    }\r\n    \r\n    // Mapear status\r\n    if (headerLower.includes('status') || headerLower.includes('situacao') || headerLower.includes('estado')) {\r\n      columnMap.status = index;\r\n    }\r\n    \r\n    // Mapear fila\r\n    if (headerLower.includes('fila') || headerLower.includes('queue') || headerLower.includes('grupo')) {\r\n      columnMap.fila = index;\r\n    }\r\n    \r\n    // Mapear satisfa√ß√£o\r\n    if (headerLower.includes('satisfacao') || headerLower.includes('satisfaction') || headerLower.includes('avaliacao')) {\r\n      columnMap.satisfacao = index;\r\n    }\r\n  });\r\n  \r\n  return columnMap;\r\n}\r\n\r\n// Fun√ß√µes de utilidade (mesmas da vers√£o original)\r\nexport function getSpreadsheetInfo() {\r\n  if (!spreadsheetData) {\r\n    return {\r\n      loaded: false,\r\n      message: 'Nenhuma planilha carregada'\r\n    };\r\n  }\r\n  \r\n  return {\r\n    loaded: true,\r\n    totalRows: spreadsheetData.totalRows,\r\n    columns: spreadsheetData.columns,\r\n    lastProcessed: spreadsheetData.lastProcessed,\r\n    lastModified: lastModified,\r\n    cacheInfo: {\r\n      size: metricsCache.size,\r\n      maxSize: MAX_CACHE_SIZE,\r\n      indexes: {\r\n        agents: agentIndex.size,\r\n        dates: dateIndex.size,\r\n        status: statusIndex.size,\r\n        filas: filaIndex.size\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function getAvailableAgents() {\r\n  if (!spreadsheetData) return [];\r\n  \r\n  return Array.from(agentIndex.keys()).map(key => \r\n    spreadsheetData.data[agentIndex.get(key)[0]]?.agente || key\r\n  );\r\n}\r\n\r\nexport function getAvailablePeriods() {\r\n  if (!spreadsheetData) return null;\r\n  \r\n  return getDateRange(spreadsheetData.data);\r\n}\r\n\r\nexport function clearSpreadsheetData() {\r\n  spreadsheetData = null;\r\n  lastModified = null;\r\n  \r\n  // Limpar √≠ndices\r\n  agentIndex.clear();\r\n  dateIndex.clear();\r\n  statusIndex.clear();\r\n  filaIndex.clear();\r\n  \r\n  // Limpar cache\r\n  metricsCache.clear();\r\n  cacheExpiry.clear();\r\n  \r\n  SPREADSHEET_LOGS.clearLogs();\r\n}\r\n\r\n// Fun√ß√£o para obter estat√≠sticas de performance\r\nexport function getPerformanceStats() {\r\n  return {\r\n    cache: {\r\n      size: metricsCache.size,\r\n      maxSize: MAX_CACHE_SIZE,\r\n      hitRate: calculateCacheHitRate()\r\n    },\r\n    indexes: {\r\n      agents: agentIndex.size,\r\n      dates: dateIndex.size,\r\n      status: statusIndex.size,\r\n      filas: filaIndex.size\r\n    },\r\n    data: {\r\n      totalRows: spreadsheetData?.totalRows || 0,\r\n      lastModified: lastModified\r\n    }\r\n  };\r\n}\r\n\r\nfunction calculateCacheHitRate() {\r\n  // Implementa√ß√£o simples - pode ser melhorada com contadores\r\n  return metricsCache.size > 0 ? 'Ativo' : 'Inativo';\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}