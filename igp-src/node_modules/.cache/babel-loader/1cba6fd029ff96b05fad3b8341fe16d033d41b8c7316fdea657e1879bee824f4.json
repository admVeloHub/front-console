{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BarChart,Bar,LineChart,Line,PieChart,Pie,Cell,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer,Legend}from'recharts';import VeloigpCard from'../ui/VeloigpCard';import VeloigpButton from'../ui/VeloigpButton';import{getDataByPeriod,getDataByAgent,getAvailableAgents,getAvailablePeriods,SPREADSHEET_LOGS}from'../../services/spreadsheetService';import'./ComparativeCharts.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ComparativeCharts=()=>{const[selectedAgent,setSelectedAgent]=useState('');const[selectedPeriod,setSelectedPeriod]=useState('10d');const[lastDayData,setLastDayData]=useState(null);const[periodData,setPeriodData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[availableAgents,setAvailableAgents]=useState([]);const[logs,setLogs]=useState([]);// Períodos disponíveis\nconst periods=[{value:'7d',label:'Últimos 7 Dias'},{value:'10d',label:'Últimos 10 Dias'},{value:'15d',label:'Últimos 15 Dias'},{value:'30d',label:'Últimos 30 Dias'}];// Cores para gráficos\nconst colors={lastDay:'#3B82F6',// Azul\nperiod:'#10B981',// Verde\nprimary:'#8B5CF6',// Roxo\nsecondary:'#F59E0B',// Amarelo\ndanger:'#EF4444',// Vermelho\nsuccess:'#059669'// Verde escuro\n};// Carregar agentes disponíveis\nuseEffect(()=>{console.log('🔄 Carregando agentes disponíveis...');const agents=getAvailableAgents();console.log('👥 Agentes encontrados:',agents);setAvailableAgents(agents);if(agents.length>0&&!selectedAgent){console.log('✅ Selecionando primeiro agente:',agents[0]);setSelectedAgent(agents[0]);}else if(agents.length===0){console.log('⚠️ Nenhum agente encontrado na planilha');}},[]);// Atualizar logs\nuseEffect(()=>{const updateLogs=()=>{setLogs(SPREADSHEET_LOGS.getLogs());};updateLogs();const interval=setInterval(updateLogs,2000);return()=>clearInterval(interval);},[]);// Calcular datas\nconst getDateRange=period=>{const now=new Date();const endDate=new Date(now);endDate.setHours(23,59,59,999);let startDate=new Date(now);switch(period){case'7d':startDate.setDate(now.getDate()-7);break;case'10d':startDate.setDate(now.getDate()-10);break;case'15d':startDate.setDate(now.getDate()-15);break;case'30d':startDate.setDate(now.getDate()-30);break;default:startDate.setDate(now.getDate()-10);}startDate.setHours(0,0,0,0);return{startDate,endDate};};// Buscar dados comparativos\nconst fetchComparativeData=async()=>{if(!selectedAgent){console.log('❌ Nenhum agente selecionado');return;}console.log('🔍 Buscando dados para agente:',selectedAgent);setLoading(true);setError(null);try{// Dados do último dia\nconst yesterday=new Date();yesterday.setDate(yesterday.getDate()-1);yesterday.setHours(0,0,0,0);const today=new Date();today.setHours(23,59,59,999);console.log('📅 Buscando dados do último dia:',yesterday.toISOString(),'até',today.toISOString());const lastDayResult=getDataByAgent(selectedAgent,yesterday,today);console.log('📊 Dados do último dia:',lastDayResult);setLastDayData(lastDayResult);// Dados do período selecionado\nconst{startDate,endDate}=getDateRange(selectedPeriod);console.log('📅 Buscando dados do período:',startDate.toISOString(),'até',endDate.toISOString());const periodResult=getDataByAgent(selectedAgent,startDate,endDate);console.log('📊 Dados do período:',periodResult);setPeriodData(periodResult);}catch(err){console.error('❌ Erro ao buscar dados comparativos:',err);setError(\"Erro ao buscar dados: \".concat(err.message));}finally{setLoading(false);}};// Carregar dados quando agente ou período mudar\nuseEffect(()=>{if(selectedAgent){fetchComparativeData();}},[selectedAgent,selectedPeriod]);// Preparar dados para gráfico de barras comparativo\nconst prepareBarChartData=()=>{if(!lastDayData||!periodData)return[];const lastDayMetrics=lastDayData.metrics;const periodMetrics=periodData.metrics;return[{name:'Total Chamadas','Último Dia':lastDayMetrics.totalChamadas||0,'Período':Math.round((periodMetrics.totalChamadas||0)/getPeriodDays()),fill:colors.primary},{name:'Chamadas Atendidas','Último Dia':lastDayMetrics.chamadasAtendidas||0,'Período':Math.round((periodMetrics.chamadasAtendidas||0)/getPeriodDays()),fill:colors.success},{name:'Chamadas Abandonadas','Último Dia':lastDayMetrics.chamadasAbandonadas||0,'Período':Math.round((periodMetrics.chamadasAbandonadas||0)/getPeriodDays()),fill:colors.danger},{name:'Tempo Médio (min)','Último Dia':Math.round((lastDayMetrics.tempoMedioAtendimento||0)/60),'Período':Math.round((periodMetrics.tempoMedioAtendimento||0)/60),fill:colors.secondary}];};// Preparar dados para gráfico de linha (evolução)\nconst prepareLineChartData=()=>{if(!periodData||!periodData.metrics.evolucaoDiaria)return[];const evolucao=periodData.metrics.evolucaoDiaria;return Object.keys(evolucao).sort().map(date=>({data:new Date(date).toLocaleDateString('pt-BR',{day:'2-digit',month:'2-digit'}),chamadas:evolucao[date].chamadas,duracao:Math.round(evolucao[date].duracao/60)// Converter para minutos\n}));};// Preparar dados para gráfico de pizza (status)\nconst preparePieChartData=()=>{if(!lastDayData)return[];const status=lastDayData.metrics.status||{};return Object.keys(status).map(key=>({name:key.charAt(0).toUpperCase()+key.slice(1),value:status[key],fill:getStatusColor(key)}));};// Preparar dados para gráfico de filas\nconst prepareQueueChartData=()=>{if(!periodData)return[];const filas=periodData.metrics.filas||{};return Object.keys(filas).map(fila=>({fila:fila,chamadas:filas[fila],fill:getQueueColor(fila)}));};// Funções auxiliares\nconst getPeriodDays=()=>{switch(selectedPeriod){case'7d':return 7;case'10d':return 10;case'15d':return 15;case'30d':return 30;default:return 10;}};const getStatusColor=status=>{const statusLower=status.toLowerCase();if(statusLower.includes('atend')||statusLower.includes('success'))return colors.success;if(statusLower.includes('abandon')||statusLower.includes('lost'))return colors.danger;if(statusLower.includes('pendente')||statusLower.includes('waiting'))return colors.secondary;return colors.primary;};const getQueueColor=fila=>{const colors=['#3B82F6','#10B981','#F59E0B','#EF4444','#8B5CF6','#06B6D4'];const index=fila.length%colors.length;return colors[index];};// Renderizar métricas resumidas\nconst renderSummaryMetrics=()=>{if(!lastDayData||!periodData)return null;const lastDay=lastDayData.metrics;const period=periodData.metrics;return/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__metric-label\",children:\"Total Chamadas\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__metric-trend\",children:lastDay.totalChamadas>period.totalChamadas/getPeriodDays()?'📈':'📉'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric-values\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__metric-lastday\",children:lastDay.totalChamadas||0}),/*#__PURE__*/_jsxs(\"span\",{className:\"comparative-charts__metric-period\",children:[Math.round((period.totalChamadas||0)/getPeriodDays()),\" (m\\xE9dia)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__metric-label\",children:\"Taxa de Atendimento\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__metric-trend\",children:lastDay.chamadasAtendidas>period.chamadasAtendidas/getPeriodDays()?'📈':'📉'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric-values\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"comparative-charts__metric-lastday\",children:[lastDay.totalChamadas>0?Math.round(lastDay.chamadasAtendidas/lastDay.totalChamadas*100):0,\"%\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"comparative-charts__metric-period\",children:[period.totalChamadas>0?Math.round(period.chamadasAtendidas/period.totalChamadas*100):0,\"% (m\\xE9dia)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__metric-label\",children:\"Satisfa\\xE7\\xE3o M\\xE9dia\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__metric-trend\",children:lastDay.satisfacaoMedia>period.satisfacaoMedia?'📈':'📉'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__metric-values\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__metric-lastday\",children:lastDay.satisfacaoMedia?lastDay.satisfacaoMedia.toFixed(1):'N/A'}),/*#__PURE__*/_jsxs(\"span\",{className:\"comparative-charts__metric-period\",children:[period.satisfacaoMedia?period.satisfacaoMedia.toFixed(1):'N/A',\" (m\\xE9dia)\"]})]})]})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCCA Gr\\xE1ficos Comparativos\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Compara\\xE7\\xE3o entre \\xFAltimo dia e per\\xEDodo selecionado\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Agente:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedAgent,onChange:e=>setSelectedAgent(e.target.value),disabled:loading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecione um agente\"}),availableAgents.map(agent=>/*#__PURE__*/_jsx(\"option\",{value:agent,children:agent},agent))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Per\\xEDodo:\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedPeriod,onChange:e=>setSelectedPeriod(e.target.value),disabled:loading,children:periods.map(period=>/*#__PURE__*/_jsx(\"option\",{value:period.value,children:period.label},period.value))})]}),/*#__PURE__*/_jsx(VeloigpButton,{variant:\"primary\",icon:\"fas fa-refresh\",onClick:fetchComparativeData,loading:loading,children:\"Atualizar\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"comparative-charts__error\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u274C \",error]})}),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Carregando dados comparativos...\"})]}),!loading&&!error&&lastDayData&&periodData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(VeloigpCard,{title:\"\\uD83D\\uDCC8 Resumo Comparativo\",subtitle:\"\".concat(selectedAgent,\" - \\xDAltimo dia vs \").concat(selectedPeriod),children:renderSummaryMetrics()}),/*#__PURE__*/_jsx(VeloigpCard,{title:\"\\uD83D\\uDCCA Comparativo de M\\xE9tricas\",subtitle:\"\\xDAltimo dia vs M\\xE9dia do per\\xEDodo\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comparative-charts__chart\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(BarChart,{data:prepareBarChartData(),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#E2E8F0\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",stroke:\"#64748B\"}),/*#__PURE__*/_jsx(YAxis,{stroke:\"#64748B\"}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'#FFFFFF',border:'1px solid #E2E8F0',borderRadius:'8px',boxShadow:'0 4px 6px -1px rgba(0, 0, 0, 0.1)'}}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"\\xDAltimo Dia\",fill:colors.lastDay,radius:[4,4,0,0]}),/*#__PURE__*/_jsx(Bar,{dataKey:\"Per\\xEDodo\",fill:colors.period,radius:[4,4,0,0]})]})})})}),/*#__PURE__*/_jsx(VeloigpCard,{title:\"\\uD83D\\uDCC8 Evolu\\xE7\\xE3o Di\\xE1ria\",subtitle:\"Chamadas e dura\\xE7\\xE3o ao longo do per\\xEDodo\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comparative-charts__chart\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:prepareLineChartData(),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#E2E8F0\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"data\",stroke:\"#64748B\"}),/*#__PURE__*/_jsx(YAxis,{stroke:\"#64748B\"}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'#FFFFFF',border:'1px solid #E2E8F0',borderRadius:'8px',boxShadow:'0 4px 6px -1px rgba(0, 0, 0, 0.1)'}}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"chamadas\",stroke:colors.primary,strokeWidth:3,dot:{fill:colors.primary,strokeWidth:2,r:4}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"duracao\",stroke:colors.secondary,strokeWidth:3,dot:{fill:colors.secondary,strokeWidth:2,r:4}})]})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__row\",children:[/*#__PURE__*/_jsx(VeloigpCard,{title:\"\\uD83E\\uDD67 Status das Chamadas\",subtitle:\"Distribui\\xE7\\xE3o por status (\\xFAltimo dia)\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comparative-charts__chart\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:preparePieChartData(),cx:\"50%\",cy:\"50%\",labelLine:false,label:_ref=>{let{name,percent}=_ref;return\"\".concat(name,\" \").concat((percent*100).toFixed(0),\"%\");},outerRadius:80,fill:\"#8884d8\",dataKey:\"value\",children:preparePieChartData().map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.fill},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{})]})})})}),/*#__PURE__*/_jsx(VeloigpCard,{title:\"\\uD83D\\uDCCB Distribui\\xE7\\xE3o por Filas\",subtitle:\"Chamadas por fila (per\\xEDodo)\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comparative-charts__chart\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:prepareQueueChartData(),layout:\"horizontal\",children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#E2E8F0\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\",stroke:\"#64748B\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"fila\",type:\"category\",stroke:\"#64748B\"}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'#FFFFFF',border:'1px solid #E2E8F0',borderRadius:'8px',boxShadow:'0 4px 6px -1px rgba(0, 0, 0, 0.1)'}}),/*#__PURE__*/_jsx(Bar,{dataKey:\"chamadas\",fill:colors.primary,radius:[0,4,4,0]})]})})})})]})]}),!loading&&!error&&(!lastDayData||!periodData)&&selectedAgent&&/*#__PURE__*/_jsx(VeloigpCard,{title:\"\\u26A0\\uFE0F Dados N\\xE3o Encontrados\",subtitle:\"Nenhum dado dispon\\xEDvel para o agente selecionado\",children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'2rem'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'3rem',marginBottom:'1rem'},children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhum dado encontrado\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xE3o foram encontrados dados para o agente \",/*#__PURE__*/_jsx(\"strong\",{children:selectedAgent}),\" no per\\xEDodo selecionado.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Verifique se:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{textAlign:'left',display:'inline-block'},children:[/*#__PURE__*/_jsx(\"li\",{children:\"A planilha foi carregada corretamente\"}),/*#__PURE__*/_jsx(\"li\",{children:\"O agente existe na planilha\"}),/*#__PURE__*/_jsx(\"li\",{children:\"H\\xE1 dados no per\\xEDodo selecionado\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'1rem'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dados do \\xFAltimo dia:\"}),\" \",lastDayData?'Encontrados':'Não encontrados']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dados do per\\xEDodo:\"}),\" \",periodData?'Encontrados':'Não encontrados']})]})]})}),/*#__PURE__*/_jsx(VeloigpCard,{title:\"\\uD83D\\uDCDD Logs do Sistema\",subtitle:\"\\xDAltimas opera\\xE7\\xF5es\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comparative-charts__logs\",children:logs.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Nenhum log dispon\\xEDvel\"}):/*#__PURE__*/_jsx(\"div\",{className:\"comparative-charts__logs-list\",children:logs.slice(-5).map((log,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"comparative-charts__log comparative-charts__log--\".concat(log.type),children:[/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__log-time\",children:new Date(log.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"span\",{className:\"comparative-charts__log-message\",children:log.message})]},index))})})})]});};export default ComparativeCharts;","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","LineChart","Line","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","VeloigpCard","VeloigpButton","getDataByPeriod","getDataByAgent","getAvailableAgents","getAvailablePeriods","SPREADSHEET_LOGS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ComparativeCharts","selectedAgent","setSelectedAgent","selectedPeriod","setSelectedPeriod","lastDayData","setLastDayData","periodData","setPeriodData","loading","setLoading","error","setError","availableAgents","setAvailableAgents","logs","setLogs","periods","value","label","colors","lastDay","period","primary","secondary","danger","success","console","log","agents","length","updateLogs","getLogs","interval","setInterval","clearInterval","getDateRange","now","Date","endDate","setHours","startDate","setDate","getDate","fetchComparativeData","yesterday","today","toISOString","lastDayResult","periodResult","err","concat","message","prepareBarChartData","lastDayMetrics","metrics","periodMetrics","name","totalChamadas","Math","round","getPeriodDays","fill","chamadasAtendidas","chamadasAbandonadas","tempoMedioAtendimento","prepareLineChartData","evolucaoDiaria","evolucao","Object","keys","sort","map","date","data","toLocaleDateString","day","month","chamadas","duracao","preparePieChartData","status","key","charAt","toUpperCase","slice","getStatusColor","prepareQueueChartData","filas","fila","getQueueColor","statusLower","toLowerCase","includes","index","renderSummaryMetrics","className","children","satisfacaoMedia","toFixed","onChange","e","target","disabled","agent","variant","icon","onClick","title","subtitle","width","height","strokeDasharray","stroke","dataKey","contentStyle","backgroundColor","border","borderRadius","boxShadow","radius","type","strokeWidth","dot","r","cx","cy","labelLine","_ref","percent","outerRadius","entry","layout","style","textAlign","padding","fontSize","marginBottom","display","marginTop","timestamp","toLocaleTimeString"],"sources":["C:/Users/lucas/OneDrive/Documentos/Code - CONSOLE DE CONTEUDO/igp-src/src/components/charts/ComparativeCharts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  BarChart, \r\n  Bar, \r\n  LineChart, \r\n  Line, \r\n  PieChart, \r\n  Pie, \r\n  Cell,\r\n  XAxis, \r\n  YAxis, \r\n  CartesianGrid, \r\n  Tooltip, \r\n  ResponsiveContainer,\r\n  Legend\r\n} from 'recharts';\r\nimport VeloigpCard from '../ui/VeloigpCard';\r\nimport VeloigpButton from '../ui/VeloigpButton';\r\nimport { \r\n  getDataByPeriod, \r\n  getDataByAgent,\r\n  getAvailableAgents,\r\n  getAvailablePeriods,\r\n  SPREADSHEET_LOGS \r\n} from '../../services/spreadsheetService';\r\nimport './ComparativeCharts.css';\r\n\r\nconst ComparativeCharts = () => {\r\n  const [selectedAgent, setSelectedAgent] = useState('');\r\n  const [selectedPeriod, setSelectedPeriod] = useState('10d');\r\n  const [lastDayData, setLastDayData] = useState(null);\r\n  const [periodData, setPeriodData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [availableAgents, setAvailableAgents] = useState([]);\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  // Períodos disponíveis\r\n  const periods = [\r\n    { value: '7d', label: 'Últimos 7 Dias' },\r\n    { value: '10d', label: 'Últimos 10 Dias' },\r\n    { value: '15d', label: 'Últimos 15 Dias' },\r\n    { value: '30d', label: 'Últimos 30 Dias' }\r\n  ];\r\n\r\n  // Cores para gráficos\r\n  const colors = {\r\n    lastDay: '#3B82F6',      // Azul\r\n    period: '#10B981',       // Verde\r\n    primary: '#8B5CF6',      // Roxo\r\n    secondary: '#F59E0B',    // Amarelo\r\n    danger: '#EF4444',       // Vermelho\r\n    success: '#059669'       // Verde escuro\r\n  };\r\n\r\n  // Carregar agentes disponíveis\r\n  useEffect(() => {\r\n    console.log('🔄 Carregando agentes disponíveis...');\r\n    const agents = getAvailableAgents();\r\n    console.log('👥 Agentes encontrados:', agents);\r\n    setAvailableAgents(agents);\r\n    if (agents.length > 0 && !selectedAgent) {\r\n      console.log('✅ Selecionando primeiro agente:', agents[0]);\r\n      setSelectedAgent(agents[0]);\r\n    } else if (agents.length === 0) {\r\n      console.log('⚠️ Nenhum agente encontrado na planilha');\r\n    }\r\n  }, []);\r\n\r\n  // Atualizar logs\r\n  useEffect(() => {\r\n    const updateLogs = () => {\r\n      setLogs(SPREADSHEET_LOGS.getLogs());\r\n    };\r\n    \r\n    updateLogs();\r\n    const interval = setInterval(updateLogs, 2000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Calcular datas\r\n  const getDateRange = (period) => {\r\n    const now = new Date();\r\n    const endDate = new Date(now);\r\n    endDate.setHours(23, 59, 59, 999);\r\n    \r\n    let startDate = new Date(now);\r\n    \r\n    switch (period) {\r\n      case '7d':\r\n        startDate.setDate(now.getDate() - 7);\r\n        break;\r\n      case '10d':\r\n        startDate.setDate(now.getDate() - 10);\r\n        break;\r\n      case '15d':\r\n        startDate.setDate(now.getDate() - 15);\r\n        break;\r\n      case '30d':\r\n        startDate.setDate(now.getDate() - 30);\r\n        break;\r\n      default:\r\n        startDate.setDate(now.getDate() - 10);\r\n    }\r\n    \r\n    startDate.setHours(0, 0, 0, 0);\r\n    \r\n    return { startDate, endDate };\r\n  };\r\n\r\n  // Buscar dados comparativos\r\n  const fetchComparativeData = async () => {\r\n    if (!selectedAgent) {\r\n      console.log('❌ Nenhum agente selecionado');\r\n      return;\r\n    }\r\n    \r\n    console.log('🔍 Buscando dados para agente:', selectedAgent);\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Dados do último dia\r\n      const yesterday = new Date();\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      yesterday.setHours(0, 0, 0, 0);\r\n      \r\n      const today = new Date();\r\n      today.setHours(23, 59, 59, 999);\r\n      \r\n      console.log('📅 Buscando dados do último dia:', yesterday.toISOString(), 'até', today.toISOString());\r\n      const lastDayResult = getDataByAgent(selectedAgent, yesterday, today);\r\n      console.log('📊 Dados do último dia:', lastDayResult);\r\n      setLastDayData(lastDayResult);\r\n      \r\n      // Dados do período selecionado\r\n      const { startDate, endDate } = getDateRange(selectedPeriod);\r\n      console.log('📅 Buscando dados do período:', startDate.toISOString(), 'até', endDate.toISOString());\r\n      const periodResult = getDataByAgent(selectedAgent, startDate, endDate);\r\n      console.log('📊 Dados do período:', periodResult);\r\n      setPeriodData(periodResult);\r\n      \r\n    } catch (err) {\r\n      console.error('❌ Erro ao buscar dados comparativos:', err);\r\n      setError(`Erro ao buscar dados: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Carregar dados quando agente ou período mudar\r\n  useEffect(() => {\r\n    if (selectedAgent) {\r\n      fetchComparativeData();\r\n    }\r\n  }, [selectedAgent, selectedPeriod]);\r\n\r\n  // Preparar dados para gráfico de barras comparativo\r\n  const prepareBarChartData = () => {\r\n    if (!lastDayData || !periodData) return [];\r\n    \r\n    const lastDayMetrics = lastDayData.metrics;\r\n    const periodMetrics = periodData.metrics;\r\n    \r\n    return [\r\n      {\r\n        name: 'Total Chamadas',\r\n        'Último Dia': lastDayMetrics.totalChamadas || 0,\r\n        'Período': Math.round((periodMetrics.totalChamadas || 0) / getPeriodDays()),\r\n        fill: colors.primary\r\n      },\r\n      {\r\n        name: 'Chamadas Atendidas',\r\n        'Último Dia': lastDayMetrics.chamadasAtendidas || 0,\r\n        'Período': Math.round((periodMetrics.chamadasAtendidas || 0) / getPeriodDays()),\r\n        fill: colors.success\r\n      },\r\n      {\r\n        name: 'Chamadas Abandonadas',\r\n        'Último Dia': lastDayMetrics.chamadasAbandonadas || 0,\r\n        'Período': Math.round((periodMetrics.chamadasAbandonadas || 0) / getPeriodDays()),\r\n        fill: colors.danger\r\n      },\r\n      {\r\n        name: 'Tempo Médio (min)',\r\n        'Último Dia': Math.round((lastDayMetrics.tempoMedioAtendimento || 0) / 60),\r\n        'Período': Math.round((periodMetrics.tempoMedioAtendimento || 0) / 60),\r\n        fill: colors.secondary\r\n      }\r\n    ];\r\n  };\r\n\r\n  // Preparar dados para gráfico de linha (evolução)\r\n  const prepareLineChartData = () => {\r\n    if (!periodData || !periodData.metrics.evolucaoDiaria) return [];\r\n    \r\n    const evolucao = periodData.metrics.evolucaoDiaria;\r\n    \r\n    return Object.keys(evolucao)\r\n      .sort()\r\n      .map(date => ({\r\n        data: new Date(date).toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit' }),\r\n        chamadas: evolucao[date].chamadas,\r\n        duracao: Math.round(evolucao[date].duracao / 60) // Converter para minutos\r\n      }));\r\n  };\r\n\r\n  // Preparar dados para gráfico de pizza (status)\r\n  const preparePieChartData = () => {\r\n    if (!lastDayData) return [];\r\n    \r\n    const status = lastDayData.metrics.status || {};\r\n    \r\n    return Object.keys(status).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      value: status[key],\r\n      fill: getStatusColor(key)\r\n    }));\r\n  };\r\n\r\n  // Preparar dados para gráfico de filas\r\n  const prepareQueueChartData = () => {\r\n    if (!periodData) return [];\r\n    \r\n    const filas = periodData.metrics.filas || {};\r\n    \r\n    return Object.keys(filas).map(fila => ({\r\n      fila: fila,\r\n      chamadas: filas[fila],\r\n      fill: getQueueColor(fila)\r\n    }));\r\n  };\r\n\r\n  // Funções auxiliares\r\n  const getPeriodDays = () => {\r\n    switch (selectedPeriod) {\r\n      case '7d': return 7;\r\n      case '10d': return 10;\r\n      case '15d': return 15;\r\n      case '30d': return 30;\r\n      default: return 10;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    const statusLower = status.toLowerCase();\r\n    if (statusLower.includes('atend') || statusLower.includes('success')) return colors.success;\r\n    if (statusLower.includes('abandon') || statusLower.includes('lost')) return colors.danger;\r\n    if (statusLower.includes('pendente') || statusLower.includes('waiting')) return colors.secondary;\r\n    return colors.primary;\r\n  };\r\n\r\n  const getQueueColor = (fila) => {\r\n    const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4'];\r\n    const index = fila.length % colors.length;\r\n    return colors[index];\r\n  };\r\n\r\n  // Renderizar métricas resumidas\r\n  const renderSummaryMetrics = () => {\r\n    if (!lastDayData || !periodData) return null;\r\n    \r\n    const lastDay = lastDayData.metrics;\r\n    const period = periodData.metrics;\r\n    \r\n    return (\r\n      <div className=\"comparative-charts__summary\">\r\n        <div className=\"comparative-charts__metric\">\r\n          <div className=\"comparative-charts__metric-header\">\r\n            <span className=\"comparative-charts__metric-label\">Total Chamadas</span>\r\n            <span className=\"comparative-charts__metric-trend\">\r\n              {lastDay.totalChamadas > (period.totalChamadas / getPeriodDays()) ? '📈' : '📉'}\r\n            </span>\r\n          </div>\r\n          <div className=\"comparative-charts__metric-values\">\r\n            <span className=\"comparative-charts__metric-lastday\">{lastDay.totalChamadas || 0}</span>\r\n            <span className=\"comparative-charts__metric-period\">\r\n              {Math.round((period.totalChamadas || 0) / getPeriodDays())} (média)\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"comparative-charts__metric\">\r\n          <div className=\"comparative-charts__metric-header\">\r\n            <span className=\"comparative-charts__metric-label\">Taxa de Atendimento</span>\r\n            <span className=\"comparative-charts__metric-trend\">\r\n              {lastDay.chamadasAtendidas > (period.chamadasAtendidas / getPeriodDays()) ? '📈' : '📉'}\r\n            </span>\r\n          </div>\r\n          <div className=\"comparative-charts__metric-values\">\r\n            <span className=\"comparative-charts__metric-lastday\">\r\n              {lastDay.totalChamadas > 0 ? Math.round((lastDay.chamadasAtendidas / lastDay.totalChamadas) * 100) : 0}%\r\n            </span>\r\n            <span className=\"comparative-charts__metric-period\">\r\n              {period.totalChamadas > 0 ? Math.round((period.chamadasAtendidas / period.totalChamadas) * 100) : 0}% (média)\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"comparative-charts__metric\">\r\n          <div className=\"comparative-charts__metric-header\">\r\n            <span className=\"comparative-charts__metric-label\">Satisfação Média</span>\r\n            <span className=\"comparative-charts__metric-trend\">\r\n              {lastDay.satisfacaoMedia > period.satisfacaoMedia ? '📈' : '📉'}\r\n            </span>\r\n          </div>\r\n          <div className=\"comparative-charts__metric-values\">\r\n            <span className=\"comparative-charts__metric-lastday\">\r\n              {lastDay.satisfacaoMedia ? lastDay.satisfacaoMedia.toFixed(1) : 'N/A'}\r\n            </span>\r\n            <span className=\"comparative-charts__metric-period\">\r\n              {period.satisfacaoMedia ? period.satisfacaoMedia.toFixed(1) : 'N/A'} (média)\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"comparative-charts\">\r\n      <div className=\"comparative-charts__header\">\r\n        <h2>📊 Gráficos Comparativos</h2>\r\n        <p>Comparação entre último dia e período selecionado</p>\r\n      </div>\r\n\r\n      <div className=\"comparative-charts__controls\">\r\n        <div className=\"comparative-charts__control-group\">\r\n          <label>Agente:</label>\r\n          <select \r\n            value={selectedAgent} \r\n            onChange={(e) => setSelectedAgent(e.target.value)}\r\n            disabled={loading}\r\n          >\r\n            <option value=\"\">Selecione um agente</option>\r\n            {availableAgents.map(agent => (\r\n              <option key={agent} value={agent}>{agent}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"comparative-charts__control-group\">\r\n          <label>Período:</label>\r\n          <select \r\n            value={selectedPeriod} \r\n            onChange={(e) => setSelectedPeriod(e.target.value)}\r\n            disabled={loading}\r\n          >\r\n            {periods.map(period => (\r\n              <option key={period.value} value={period.value}>\r\n                {period.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <VeloigpButton\r\n          variant=\"primary\"\r\n          icon=\"fas fa-refresh\"\r\n          onClick={fetchComparativeData}\r\n          loading={loading}\r\n        >\r\n          Atualizar\r\n        </VeloigpButton>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"comparative-charts__error\">\r\n          <p>❌ {error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {loading && (\r\n        <div className=\"comparative-charts__loading\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Carregando dados comparativos...</p>\r\n        </div>\r\n      )}\r\n\r\n      {!loading && !error && lastDayData && periodData && (\r\n        <>\r\n          {/* Métricas Resumidas */}\r\n          <VeloigpCard title=\"📈 Resumo Comparativo\" subtitle={`${selectedAgent} - Último dia vs ${selectedPeriod}`}>\r\n            {renderSummaryMetrics()}\r\n          </VeloigpCard>\r\n\r\n          {/* Gráfico de Barras Comparativo */}\r\n          <VeloigpCard title=\"📊 Comparativo de Métricas\" subtitle=\"Último dia vs Média do período\">\r\n            <div className=\"comparative-charts__chart\">\r\n              <ResponsiveContainer width=\"100%\" height={400}>\r\n                <BarChart data={prepareBarChartData()}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E2E8F0\" />\r\n                  <XAxis dataKey=\"name\" stroke=\"#64748B\" />\r\n                  <YAxis stroke=\"#64748B\" />\r\n                  <Tooltip \r\n                    contentStyle={{\r\n                      backgroundColor: '#FFFFFF',\r\n                      border: '1px solid #E2E8F0',\r\n                      borderRadius: '8px',\r\n                      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\r\n                    }}\r\n                  />\r\n                  <Legend />\r\n                  <Bar dataKey=\"Último Dia\" fill={colors.lastDay} radius={[4, 4, 0, 0]} />\r\n                  <Bar dataKey=\"Período\" fill={colors.period} radius={[4, 4, 0, 0]} />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </VeloigpCard>\r\n\r\n          {/* Gráfico de Linha - Evolução */}\r\n          <VeloigpCard title=\"📈 Evolução Diária\" subtitle=\"Chamadas e duração ao longo do período\">\r\n            <div className=\"comparative-charts__chart\">\r\n              <ResponsiveContainer width=\"100%\" height={400}>\r\n                <LineChart data={prepareLineChartData()}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E2E8F0\" />\r\n                  <XAxis dataKey=\"data\" stroke=\"#64748B\" />\r\n                  <YAxis stroke=\"#64748B\" />\r\n                  <Tooltip \r\n                    contentStyle={{\r\n                      backgroundColor: '#FFFFFF',\r\n                      border: '1px solid #E2E8F0',\r\n                      borderRadius: '8px',\r\n                      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\r\n                    }}\r\n                  />\r\n                  <Legend />\r\n                  <Line \r\n                    type=\"monotone\" \r\n                    dataKey=\"chamadas\" \r\n                    stroke={colors.primary} \r\n                    strokeWidth={3}\r\n                    dot={{ fill: colors.primary, strokeWidth: 2, r: 4 }}\r\n                  />\r\n                  <Line \r\n                    type=\"monotone\" \r\n                    dataKey=\"duracao\" \r\n                    stroke={colors.secondary} \r\n                    strokeWidth={3}\r\n                    dot={{ fill: colors.secondary, strokeWidth: 2, r: 4 }}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </VeloigpCard>\r\n\r\n          <div className=\"comparative-charts__row\">\r\n            {/* Gráfico de Pizza - Status */}\r\n            <VeloigpCard title=\"🥧 Status das Chamadas\" subtitle=\"Distribuição por status (último dia)\">\r\n              <div className=\"comparative-charts__chart\">\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={preparePieChartData()}\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      labelLine={false}\r\n                      label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                      outerRadius={80}\r\n                      fill=\"#8884d8\"\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {preparePieChartData().map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={entry.fill} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </VeloigpCard>\r\n\r\n            {/* Gráfico de Filas */}\r\n            <VeloigpCard title=\"📋 Distribuição por Filas\" subtitle=\"Chamadas por fila (período)\">\r\n              <div className=\"comparative-charts__chart\">\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <BarChart data={prepareQueueChartData()} layout=\"horizontal\">\r\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E2E8F0\" />\r\n                    <XAxis type=\"number\" stroke=\"#64748B\" />\r\n                    <YAxis dataKey=\"fila\" type=\"category\" stroke=\"#64748B\" />\r\n                    <Tooltip \r\n                      contentStyle={{\r\n                        backgroundColor: '#FFFFFF',\r\n                        border: '1px solid #E2E8F0',\r\n                        borderRadius: '8px',\r\n                        boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\r\n                      }}\r\n                    />\r\n                    <Bar dataKey=\"chamadas\" fill={colors.primary} radius={[0, 4, 4, 0]} />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </VeloigpCard>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {!loading && !error && (!lastDayData || !periodData) && selectedAgent && (\r\n        <VeloigpCard title=\"⚠️ Dados Não Encontrados\" subtitle=\"Nenhum dado disponível para o agente selecionado\">\r\n          <div style={{ textAlign: 'center', padding: '2rem' }}>\r\n            <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>📊</div>\r\n            <h3>Nenhum dado encontrado</h3>\r\n            <p>Não foram encontrados dados para o agente <strong>{selectedAgent}</strong> no período selecionado.</p>\r\n            <p>Verifique se:</p>\r\n            <ul style={{ textAlign: 'left', display: 'inline-block' }}>\r\n              <li>A planilha foi carregada corretamente</li>\r\n              <li>O agente existe na planilha</li>\r\n              <li>Há dados no período selecionado</li>\r\n            </ul>\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <p><strong>Dados do último dia:</strong> {lastDayData ? 'Encontrados' : 'Não encontrados'}</p>\r\n              <p><strong>Dados do período:</strong> {periodData ? 'Encontrados' : 'Não encontrados'}</p>\r\n            </div>\r\n          </div>\r\n        </VeloigpCard>\r\n      )}\r\n\r\n      {/* Logs */}\r\n      <VeloigpCard title=\"📝 Logs do Sistema\" subtitle=\"Últimas operações\">\r\n        <div className=\"comparative-charts__logs\">\r\n          {logs.length === 0 ? (\r\n            <p>Nenhum log disponível</p>\r\n          ) : (\r\n            <div className=\"comparative-charts__logs-list\">\r\n              {logs.slice(-5).map((log, index) => (\r\n                <div key={index} className={`comparative-charts__log comparative-charts__log--${log.type}`}>\r\n                  <span className=\"comparative-charts__log-time\">\r\n                    {new Date(log.timestamp).toLocaleTimeString()}\r\n                  </span>\r\n                  <span className=\"comparative-charts__log-message\">{log.message}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </VeloigpCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComparativeCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}