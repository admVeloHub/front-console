import React from 'react'
import { getUserByEmail } from '../config/usuarios'
import { getAvailableCargoConfigs } from '../config/cargos'
import './CargoSelection.css'

const CargoSelection = ({ userEmail, onCargoSelected }) => {
  const user = getUserByEmail(userEmail)
  
  if (!user) {
    return (
      <div className="cargo-selection-error">
        <h2>‚ùå Usu√°rio n√£o encontrado</h2>
        <p>E-mail: {userEmail}</p>
      </div>
    )
  }

  // Obter cargos dispon√≠veis diretamente usando a hierarquia
  const availableCargos = getAvailableCargoConfigs(user.cargo)

  const handleCargoClick = (cargo) => {
    if (onCargoSelected) {
      onCargoSelected(cargo)
    }
  }

  return (
    <div className="cargo-selection-overlay">
      <div className="cargo-selection-modal">
        <div className="cargo-selection-header">
          <h2>üéØ Selecione seu Perfil</h2>
          <p>Ol√°, <strong>{user.nome}</strong>!</p>
          <p>Escolha como deseja acessar o sistema:</p>
        </div>

        <div className="cargo-selection-grid">
          {availableCargos.map((cargoConfig) => (
            <div
              key={cargoConfig.cargo}
              className="cargo-card"
              onClick={() => handleCargoClick(cargoConfig.cargo)}
              style={{ '--cargo-color': cargoConfig.color }}
            >
              <div className="cargo-icon">
                {cargoConfig.icon}
              </div>
              <div className="cargo-info">
                <h3>{cargoConfig.name}</h3>
                <div className="cargo-permissions">
                  {cargoConfig.cargo === 'OPERADOR' && (
                    <ul>
                      <li>‚úÖ Seus dados pessoais</li>
                      <li>‚úÖ Posi√ß√£o no ranking geral</li>
                      <li>‚ùå Dados de outros usu√°rios</li>
                    </ul>
                  )}
                  {cargoConfig.cargo === 'ANALISTA' && (
                    <ul>
                      <li>‚úÖ Dados de operadores</li>
                      <li>‚úÖ M√©tricas gerais</li>
                      <li>‚úÖ Avisos do sistema</li>
                      <li>‚ùå Dados de gestores</li>
                    </ul>
                  )}
                  {cargoConfig.cargo === 'GESTOR' && (
                    <ul>
                      <li>‚úÖ Dados de operadores</li>
                      <li>‚úÖ Informa√ß√µes de analistas</li>
                      <li>‚úÖ M√©tricas gerais</li>
                      <li>‚úÖ Configura√ß√µes do sistema</li>
                    </ul>
                  )}
                  {(cargoConfig.cargo === 'DIRETOR' || cargoConfig.cargo === 'SUPERADMIN') && (
                    <ul>
                      <li>‚úÖ Acesso total ao sistema</li>
                      <li>‚úÖ Todos os dados e usu√°rios</li>
                      <li>‚úÖ Configura√ß√µes avan√ßadas</li>
                      <li>‚úÖ Relat√≥rios completos</li>
                    </ul>
                  )}
                </div>
              </div>
              <div className="cargo-action">
                <button className="select-cargo-btn">
                  Selecionar
                </button>
              </div>
            </div>
          ))}
        </div>

        <div className="cargo-selection-footer">
          <p>üí° Esta escolha ser√° v√°lida por 10 minutos offline</p>
          <p>üîÑ Logout autom√°tico ao fechar/recarregar a p√°gina</p>
        </div>
      </div>
    </div>
  )
}

export default CargoSelection
